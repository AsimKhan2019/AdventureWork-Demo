<p>This demo intends to show different ways of improving performance by optimizing LINQ queries yet displaying ways to monitor and debug activity</p>
<ul>
    <li>
        <a href="https://www2.deloitte.com/es/es/pages/technology/articles/que-es-orm.html" target="_blank">What is an ORM?</a>
    </li>
    <li>
        <a href="https://www2.deloitte.com/es/es/pages/technology/articles/cuando-usar-orm.html" target="_blank">When to use an ORM?</a>
    </li>
    <li><a href="https://www2.deloitte.com/es/es/pages/technology/articles/como-optimizar-rendimiento-orm.html" target="_blank">How to optimize performance in your ORM?</a></li>
</ul>
<hr />
<p><strong>An ORM is a programming model that allows us to map relational database structures on a logical framework of entities</strong> in order to simplify and accelerate the development work.</p>
<p>The structures of the relational database are linked to the logical entities or virtual database defined in the ORM, in such a way that  <strong>CRUD actions to execute on the physical database are performed indirectly through the ORM</strong>.</p>
<p class="text-center"><img class="img-thumbnail" src="@Url.GetImage("ORM.Capture.1.PNG")" /></p>
<p>ORMs prevent us from coding manual SQL to perform queries and persist data in the database. <strong>Generating efficient SQL as from business/conceptual entities is one of the most challenging goals for an ORM (<i>Impedance mismatch</i>)</strong>.</p>
<p>
    The decision of using a certain ORM over a relational database should consider the following main points:
    <ul>
        <li>Volume and complexity of entity models</li>
        <li>Performance</li>
        <li>Maturity level when dealing with SQL</li>
    </ul>
</p>    
